{
  "version": 3,
  "sources": ["../../../bin/live-reload.js", "../../../src/utils/string.ts", "../../../src/api/RestClient.ts", "../../../src/api/DashboardService.ts", "../../../src/api/AuthService.ts", "../../../src/pages/dashboard/settings.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const copyToClipboard = (text: string): void => {\n    const el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n\n    const selection = document.getSelection();\n    const selected = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : null;\n\n    el.select();\n    el.setSelectionRange(0, text.length);\n    document.execCommand('copy');\n    document.body.removeChild(el);\n\n    if (selected) {\n        selection?.removeAllRanges();\n        selection?.addRange(selected);\n    }\n};\n\nexport function parseJwt(token: string) {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map(function (c) {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n\n    return JSON.parse(jsonPayload);\n}\n", "//PROD URL\n// export const BASE_URL = 'https://api.aiornot.com';\n\n//Staging URL\n// export const BASE_URL = 'https://v3-atrium-prod-api.optic.xyz';\n// export const BASE_URL = 'https://v3-atrium-stage-api.optic.xyz';\n// export const BASE_URL = 'http://localhost:8000';\nexport const BASE_URL = 'https://api.ai-or-not.com';\n\nexport const BASE_URL_RESULTS = 'https://results.aiornot.com';\n\nexport class RestClient {\n    apiUrl: string;\n    bearerToken: string;\n\n    constructor(apiUrl: string, bearerToken: string) {\n        this.apiUrl = apiUrl;\n        this.bearerToken = bearerToken;\n    }\n\n    async get(endpoint: string): Promise<any> {\n        const url = `${this.apiUrl}/${endpoint}`;\n\n        try {\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${this.bearerToken}`,\n                },\n            });\n\n            return await this.handleResponse(response);\n        } catch (error) {\n            if (error.status === 429) {\n                if (error.message.msg.type === 'requests') {\n                    alert(\n                        `It looks like you have reached your plan limit of ${error.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`\n                    );\n                }\n            }\n            console.error('Error', error);\n            throw error;\n        }\n    }\n\n    async post(endpoint: string, body: any): Promise<any> {\n        const url = `${this.apiUrl}/${endpoint}`;\n\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${this.bearerToken}`,\n                },\n                body: JSON.stringify(body),\n            });\n\n            return await this.handleResponse(response);\n        } catch (error) {\n            console.error('Request error', error);\n            if (error.status === 429) {\n                if (error.message.msg.type === 'requests') {\n                    alert(\n                        `It looks like you have reached your plan limit of ${error.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`\n                    );\n                }\n            }\n            throw error;\n        }\n    }\n\n    async postBinary(endpoint: string, formData: FormData): Promise<any> {\n        const url = `${this.apiUrl}/${endpoint}`;\n        console.log('url', url);\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: `Bearer ${this.bearerToken}`,\n                },\n                body: formData,\n            });\n\n            const data = await this.handleResponse(response);\n            return data;\n        } catch (error) {\n            console.error('Binary request error:', error);\n            if (error.status === 429) {\n                if (error.message.msg.type === 'requests') {\n                    alert(\n                        `It looks like you have reached your plan limit of ${error.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`\n                    );\n                }\n            }\n            throw error;\n        }\n    }\n\n    async delete(endpoint: string): Promise<void> {\n        const url = `${this.apiUrl}/${endpoint}`;\n\n        try {\n            const response = await fetch(url, {\n                method: 'DELETE',\n                headers: {\n                    accept: '*/*',\n                    Authorization: `Bearer ${this.bearerToken}`,\n                },\n            });\n\n            await this.handleResponse(response);\n        } catch (error) {\n            console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 DELETE-\u0437\u0430\u043F\u0440\u043E\u0441\u0430:', error);\n            throw error;\n        }\n    }\n\n    async patch(endpoint: string, body: any): Promise<any> {\n        const url = `${this.apiUrl}/${endpoint}`;\n\n        try {\n            const response = await fetch(url, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${this.bearerToken}`,\n                },\n                body: JSON.stringify(body),\n            });\n\n            return await this.handleResponse(response);\n        } catch (error) {\n            console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 PATCH-\u0437\u0430\u043F\u0440\u043E\u0441\u0430:', error);\n            throw error;\n        }\n    }\n\n    private async handleResponse(response: Response): Promise<any> {\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw { status: response.status, message: errorData };\n        }\n        if (response.status !== 204) {\n            const data = await response.json();\n            return data;\n        }\n    }\n}\n", "import { AuthService } from './AuthService';\nimport { BASE_URL, RestClient } from './RestClient';\n\nexport class DashboardService {\n    private static instance: DashboardService | null = null;\n    private client: RestClient;\n\n    private constructor() {\n        const bearerToken = AuthService.getToken();\n        const baseUrl = `${BASE_URL}/aion/users`;\n        this.client = new RestClient(baseUrl, bearerToken);\n    }\n\n    public static getInstance(): DashboardService {\n        if (!DashboardService.instance) {\n            DashboardService.instance = new DashboardService();\n        }\n        return DashboardService.instance;\n    }\n\n    public static async fetchRequests(offset = 0, limit = 10): Promise<any[]> {\n        try {\n            const { client } = DashboardService.getInstance();\n            const endpoint = `data?filters=requests&offset=${offset}&limit=${limit}`;\n            return await client.get(endpoint).then((data) => data.requests.array);\n        } catch (error) {\n            console.error('getRequests:', error);\n            return [];\n        }\n    }\n\n    public static async fetchUsageApi(): Promise<any[]> {\n        try {\n            const { client } = DashboardService.getInstance();\n            const endpoint = `data?filters=all&offset=0&limit=1`;\n            return await client.get(endpoint).then((data) => data.api);\n        } catch (error) {\n            console.error('fetchUsageApi:', error);\n            return [];\n        }\n    }\n\n    public static async signUp(): Promise<boolean> {\n        try {\n            const { client } = DashboardService.getInstance();\n            return await client\n                .post('sign_up', {})\n                .then(() => false)\n                .catch((error) => {\n                    if (error.status === 400) {\n                        return true;\n                    }\n                    throw error;\n                });\n        } catch (error) {\n            console.error('signUp:', error);\n            return false;\n        }\n    }\n\n    public static async login(): Promise<any> {\n        try {\n            const { client } = DashboardService.getInstance();\n            return await client.get('login');\n        } catch (error) {\n            console.error('login:', error);\n        }\n    }\n\n    public static async delete(): Promise<void> {\n        try {\n            const { client } = DashboardService.getInstance();\n            // AuthService.removeAuth(); // \u0420\u0430\u0441\u043A\u043E\u043C\u043C\u0435\u043D\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u044D\u0442\u0443 \u0441\u0442\u0440\u043E\u043A\u0443 \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430 AuthService\n            return await client.delete('');\n        } catch (error) {\n            console.error('delete:', error);\n        }\n    }\n\n    public static async fetchApiToken(): Promise<any> {\n        try {\n            const { client } = DashboardService.getInstance();\n            return await client.post('api_token', {});\n        } catch (error) {\n            console.error('fetchApiToken:', error);\n            console.error('fetchApiToken:', error);\n        }\n    }\n\n    public static async refreshApiToken(): Promise<any> {\n        try {\n            const { client } = DashboardService.getInstance();\n            return await client.patch('api_token', {});\n        } catch (error) {\n            console.error('refreshApiToken:', error);\n        }\n    }\n\n    public static async fetchSubscriptionData(): Promise<any> {\n        const { client } = DashboardService.getInstance();\n\n        try {\n            const endpoint = `data?filters=all&offset=0&limit=1`;\n            return await client.get(endpoint).then((data) => data);\n        } catch (error) {\n            console.error('fetchSubscriptionData:', error);\n        }\n    }\n}\n", "import { parseJwt } from '$utils/string';\n\nimport { DashboardService } from './DashboardService';\n// import * as jwt from 'jsonwebtoken';\n// import * as NodeRSA from 'node-rsa';\n// import NodeRSA from 'node-rsa';\n// import jwt from 'jsonwebtoken';\n\ninterface KeyData {\n    kty: string;\n    n: string;\n    e: string;\n    alg: string;\n    use: string;\n    kid: string;\n}\n\nexport class AuthService {\n    static key = 'isSignUp';\n    static token_key = '_ms-mid';\n\n    constructor() {}\n\n    static isAuth(): boolean {\n        if (localStorage.getItem(AuthService.token_key) !== null) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static setAuth(): void {\n        localStorage.setItem(AuthService.key, 'true');\n    }\n\n    static removeAuth(): void {\n        localStorage.removeItem(AuthService.key);\n    }\n\n    static async init(): Promise<void> {\n        if (AuthService.isAuth()) {\n            await DashboardService.signUp();\n            AuthService.setAuth();\n            await DashboardService.login();\n        } else {\n            await DashboardService.signUp();\n            AuthService.setAuth();\n            await DashboardService.login();\n        }\n    }\n\n    static getToken(): string {\n        return localStorage.getItem('_ms-mid') ?? '';\n    }\n\n    static isExpiredToken(): boolean {\n        const token = AuthService.getToken();\n\n        if (token?.length > 0) {\n            const jwt = parseJwt(token);\n            const current_time = Date.now() / 1000;\n            return jwt.exp < current_time;\n        }\n\n        return true;\n    }\n\n    static checkAuth(redirect_function) {\n        if (!AuthService.isAuth()) {\n            const signInModalElement = document.getElementById('sign-up') as any;\n            signInModalElement.style.display = 'flex';\n            signInModalElement.style.zIndex = 100;\n            redirect_function();\n            return true;\n        }\n        return false;\n    }\n}\n", "import { AuthService, DashboardService } from '../../api';\n\n(document.getElementById('delete-account') as any).onclick = async () => {\n    await AuthService.init();\n    await DashboardService.delete();\n    window.location.href = 'https://aiornot.com';\n};\n\n(document.getElementById('sign-out') as any).onclick = () => {\n    AuthService.removeAuth();\n};\n"],
  "mappings": "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",
  "names": []
}
