"use strict";(()=>{function h(g){var t=g.split(".")[1],r=t.replace(/-/g,"+").replace(/_/g,"/"),e=decodeURIComponent(atob(r).split("").map(function(o){return"%"+("00"+o.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(e)}var p="https://api.ai-or-not.com";var l=class{constructor(t,r){this.apiUrl=t,this.bearerToken=r}async get(t){let r=`${this.apiUrl}/${t}`;try{let e=await fetch(r,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`}});return await this.handleResponse(e)}catch(e){throw e.status===429&&e.message.msg.type==="requests"&&alert(`It looks like you have reached your plan limit of ${e.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),console.error("Error",e),e}}async post(t,r){let e=`${this.apiUrl}/${t}`;try{let o=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`},body:JSON.stringify(r)});return await this.handleResponse(o)}catch(o){throw console.error("Request error",o),o.status===429&&o.message.msg.type==="requests"&&alert(`It looks like you have reached your plan limit of ${o.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),o}}async postBinary(t,r){let e=`${this.apiUrl}/${t}`;console.log("url",e);try{let o=await fetch(e,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${this.bearerToken}`},body:r});return await this.handleResponse(o)}catch(o){throw console.error("Binary request error:",o),o.status===429&&o.message.msg.type==="requests"&&alert(`It looks like you have reached your plan limit of ${o.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),o}}async delete(t){let r=`${this.apiUrl}/${t}`;try{let e=await fetch(r,{method:"DELETE",headers:{accept:"*/*",Authorization:`Bearer ${this.bearerToken}`}});await this.handleResponse(e)}catch(e){throw console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 DELETE-\u0437\u0430\u043F\u0440\u043E\u0441\u0430:",e),e}}async patch(t,r){let e=`${this.apiUrl}/${t}`;try{let o=await fetch(e,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`},body:JSON.stringify(r)});return await this.handleResponse(o)}catch(o){throw console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 PATCH-\u0437\u0430\u043F\u0440\u043E\u0441\u0430:",o),o}}async handleResponse(t){if(!t.ok){let r=await t.json();throw{status:t.status,message:r}}if(t.status!==204)return await t.json()}};var s=class{constructor(){let t=n.getToken(),r=`${p}/aion/users`;this.client=new l(r,t)}static getInstance(){return s.instance||(s.instance=new s),s.instance}static async fetchRequests(t=0,r=10){try{let{client:e}=s.getInstance(),o=`data?filters=requests&offset=${t}&limit=${r}`;return await e.get(o).then(m=>m.requests.array)}catch(e){return console.error("getRequests:",e),[]}}static async fetchUsageApi(){try{let{client:t}=s.getInstance(),r="data?filters=all&offset=0&limit=1";return await t.get(r).then(e=>e.api)}catch(t){return console.error("fetchUsageApi:",t),[]}}static async signUp(){try{let{client:t}=s.getInstance();return await t.post("sign_up",{}).then(()=>!1).catch(r=>{if(r.status===400)return!0;throw r})}catch(t){return console.error("signUp:",t),!1}}static async login(){try{let{client:t}=s.getInstance();return await t.get("login")}catch(t){console.error("login:",t)}}static async delete(){try{let{client:t}=s.getInstance();return await t.delete("")}catch(t){console.error("delete:",t)}}static async fetchApiToken(){try{let{client:t}=s.getInstance();return await t.post("api_token",{})}catch(t){console.error("fetchApiToken:",t),console.error("fetchApiToken:",t)}}static async refreshApiToken(){try{let{client:t}=s.getInstance();return await t.patch("api_token",{})}catch(t){console.error("refreshApiToken:",t)}}static async fetchSubscriptionData(){let{client:t}=s.getInstance();try{let r="data?filters=all&offset=0&limit=1";return await t.get(r).then(e=>e)}catch(r){console.error("fetchSubscriptionData:",r)}}},a=s;a.instance=null;var i=class{constructor(){}static isAuth(){return localStorage.getItem(i.token_key)!==null}static setAuth(){localStorage.setItem(i.key,"true")}static removeAuth(){localStorage.removeItem(i.key)}static async init(){i.isAuth()?(await a.signUp(),i.setAuth(),await a.login()):(await a.signUp(),i.setAuth(),await a.login())}static getToken(){var t;return(t=localStorage.getItem("_ms-mid"))!=null?t:""}static isExpiredToken(){let t=i.getToken();if((t==null?void 0:t.length)>0){let r=h(t),e=Date.now()/1e3;return r.exp<e}return!0}static checkAuth(t){if(!i.isAuth()){let r=document.getElementById("sign-up");return r.style.display="flex",r.style.zIndex=100,t(),!0}return!1}},n=i;n.key="isSignUp",n.token_key="_ms-mid";var c=class{constructor(){let t=n.getToken(),r=`${p}/aion/ai-generated`;this.client=new l(r,t)}static getInstance(){return c.instance||(c.instance=new c),c.instance}static async getReportsByBinary(t){let{client:r}=c.getInstance();try{let e=new FormData;return e.append("binary",t,"uploaded-file.png"),await r.postBinary("reports/binary",e)}catch(e){e.status===402&&alert("Please verify your email to continue using the service"),e.status===429&&(alert(`You have reached the limit of requests per day. Alert: ${JSON.stringify(e.message)}`),window.location.href=`https://${window.location.host}/#plans`),console.error("Error getReportsByBinary:",e)}}static async getReportsByUrl(t){let{client:r}=c.getInstance();try{let e=`reports/url?url=${t}`;return await r.post(e,{})}catch(e){e.status===402&&alert("Please verify your email to continue using the service"),console.error("getReportsByUrl:",e)}}static async getAudioVerdict(t){console.log("getAudioVerdict");let{client:r}=c.getInstance();try{let e=new FormData;return e.append("file",t),await r.postBinary("reports/audio/binary",e)}catch(e){e.status===402&&alert("Please verify your email to continue using the service"),console.error("Error getAudioVerdict:",e)}}static async getYoutubeVerdict(t){let{client:r}=c.getInstance();try{let e={url:t};return await r.post("reports/audio/link",e)}catch(e){e.status===402&&alert("Please verify your email to continue using the service"),console.error("Error getYoutubeVerdict:",e)}}},u=c;u.instance=null;var y=class{constructor(){}static isLimitExceeded(){return!!n.isExpiredToken()}static increment(){let t=localStorage.getItem(y.key),r=t===null?1:Number(t)+1;localStorage.setItem(y.key,r.toString())}},d=y;d.key="requestCount";document.getElementById("delete-account").onclick=async()=>{await n.init(),await a.delete(),window.location.href="https://aiornot.com"};document.getElementById("sign-out").onclick=()=>{n.removeAuth()};})();
