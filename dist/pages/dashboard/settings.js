"use strict";(()=>{function j(c){var e=c.split(".")[1],t=e.replace(/-/g,"+").replace(/_/g,"/"),r=decodeURIComponent(atob(t).split("").map(function(o){return"%"+("00"+o.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(r)}var U="https://js.stripe.com/v3",Y=/^https:\/\/js\.stripe\.com\/v3\/?(\?.*)?$/,R="loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used",F=function(){for(var e=document.querySelectorAll('script[src^="'.concat(U,'"]')),t=0;t<e.length;t++){var r=e[t];if(Y.test(r.src))return r}return null},H=function(e){var t=e&&!e.advancedFraudSignals?"?advancedFraudSignals=false":"",r=document.createElement("script");r.src="".concat(U).concat(t);var o=document.head||document.body;if(!o)throw new Error("Expected document.body not to be null. Stripe.js requires a <body> element.");return o.appendChild(r),r},M=function(e,t){!e||!e._registerWrapper||e._registerWrapper({name:"stripe-js",version:"2.1.7",startTime:t})},m=null,V=function(e){return m!==null||(m=new Promise(function(t,r){if(typeof window=="undefined"||typeof document=="undefined"){t(null);return}if(window.Stripe&&e&&console.warn(R),window.Stripe){t(window.Stripe);return}try{var o=F();o&&e?console.warn(R):o||(o=H(e)),o.addEventListener("load",function(){window.Stripe?t(window.Stripe):r(new Error("Stripe.js not available"))}),o.addEventListener("error",function(){r(new Error("Failed to load Stripe.js"))})}catch(n){r(n);return}})),m},N=function(e,t,r){if(e===null)return null;var o=e.apply(void 0,t);return M(o,r),o},q=Promise.resolve().then(function(){return V(null)}),_=!1;q.catch(function(c){_||console.warn(c)});var C=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];_=!0;var o=Date.now();return q.then(function(n){return N(n,t,o)})};var u="http://localhost:8000";var h=class{constructor(e,t){this.apiUrl=e,this.bearerToken=t}async get(e){let t=`${this.apiUrl}/${e}`;try{let r=await fetch(t,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`}});return await this.handleResponse(r)}catch(r){throw r.status===429&&r.message.msg.type==="requests"&&alert(`It looks like you have reached your plan limit of ${r.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),console.error("Error",r),r}}async post(e,t){let r=`${this.apiUrl}/${e}`;try{let o=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`},body:JSON.stringify(t)});return await this.handleResponse(o)}catch(o){throw console.error("Request error",o),o.status===429&&o.message.msg.type==="requests"&&alert(`It looks like you have reached your plan limit of ${o.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),o}}async postBinary(e,t){let r=`${this.apiUrl}/${e}`;console.log("url",r);try{let o=await fetch(r,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${this.bearerToken}`},body:t});return await this.handleResponse(o)}catch(o){throw console.error("Binary request error:",o),o.status===429&&o.message.msg.type==="requests"&&alert(`It looks like you have reached your plan limit of ${o.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),o}}async delete(e){let t=`${this.apiUrl}/${e}`;try{let r=await fetch(t,{method:"DELETE",headers:{accept:"*/*",Authorization:`Bearer ${this.bearerToken}`}});await this.handleResponse(r)}catch(r){throw console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 DELETE-\u0437\u0430\u043F\u0440\u043E\u0441\u0430:",r),r}}async patch(e,t){let r=`${this.apiUrl}/${e}`;try{let o=await fetch(r,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`},body:JSON.stringify(t)});return await this.handleResponse(o)}catch(o){throw console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 PATCH-\u0437\u0430\u043F\u0440\u043E\u0441\u0430:",o),o}}async handleResponse(e){if(!e.ok){let t=await e.json();throw{status:e.status,message:t}}if(e.status!==204)return await e.json()}};var y=class{constructor(){this.elements=null;this.stripe=null;this.home_element=document.querySelector("#home");this.PRODUCT_ID_BASE_PLAN={id:"price_1O2Ba4Ba9yG4sk8k4y3ZnEVT",msg:"Base plan: $30/month",test_id:"price_1O1wSsBa9yG4sk8kej8shNYs"};this.PRODUCT_ID_PRO_PLAN={id:"price_1O2Ku4Ba9yG4sk8kIQBdzpPj",msg:"Pro plan: $250/month",test_id:"price_1O1wTVBa9yG4sk8kQSPeT9rp"};this.is_test_mode=!1}createPaymentForm(e){this.home_element.innerHTML=`



        <div style="background: white; position: fixed; top: 0; left: 0; right: 0; bottom: 0; display: flex; flex-direction: column; justify-content: center; align-items: center">
            <div style="width: 100%; display: flex; justify-content: center; align-items: center">
                <h2 style="color: black; font-size: 2.5rem; justify-content: center">AI or Not</h2>
                <br>
                <br>
                <br>
            </div>
           <div class="payment-container">
           <div class="sr-root" style="display: flex; flex-direction: row; align-items: center; justify-content: center; min-width: 380px">
            <div class="sr-main">
                <h2 style="color: black; font-size: 2.5rem; justify-content: center">${e}</h2>
                <br>
<!--                <div>-->
<!--                    <div class="loader" style="border: 16px solid #f3f3f3; border-top: 16px solid #adff00; border-bottom: 16px solid #adff00; border-radius: 50%;width: 120px;height: 120px;animation: spin 2s linear infinite;"></div>-->
<!--                </div>-->
                <form id="payment-form" style="min-width: 380px">
                    <div id="payment-element"></div>
                    <br>
                    // Add callback function
<!--                    <button class="button" style="width: 100%;" id="submit">-->
<!--                        <span style="width: 100 %;" id="button-text">Pay</span>-->
<!--                    </button>-->
                    
                </form>
                
                    <button class="button" style="width: 100%; visibility: hidden" id="submit">
                        <span style="width: 100 %;" id="button-text">Pay</span>
                    </button>
                    
                
            </div>
        </div>
        </div>
            <div id="progress-loader" class="loader" style="border: 16px solid #f3f3f3; border-top: 16px solid #adff00; border-bottom: 16px solid #adff00; border-radius: 50%;width: 120px;height: 120px;animation: spin 2s linear infinite;"></div>
        </div>
    `,document.querySelector("#submit").addEventListener("click",()=>{console.log("test"),this.completePayment()})}async createPaymentIntent(e){fetch(`${u}/aion/payments/config`).then(t=>t.json()).then(t=>{C(t.stripe_public_key).then(r=>{this.stripe=r,this.is_test_mode=t.stripe_public_key.includes("test"),fetch(`${u}/aion/payments/create_intent`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.checkUserToken()}`},body:JSON.stringify({product_id:this.is_test_mode?e.test_id:e.id})}).then(o=>o.json()).then(o=>{var s;if(o.code===10)throw console.warn(o.message),alert(o.message),window.location.href=`https://${window.location.host}/`,new Error(o.message);this.elements=this.stripe.elements({clientSecret:o.client_secret});let n=this.elements.create("payment");(s=document.querySelector("#progress-loader"))==null||s.classList.add("hide"),document.querySelector("#submit").style.visibility="visible",n.mount("#payment-element")}).catch(o=>{console.error("Something wrong when create a payment intent",o),alert("Something wrong when create a payment. Please try again.")})})})}checkUserToken(){let e=localStorage.getItem("_ms-mid");if(!e)throw new Error("User token not found");return e}completePayment(){var e,t;console.log("completePayment"),console.log(this.elements),(e=document.querySelector("#progress-loader"))==null||e.classList.remove("hide"),document.querySelector("#submit").style.visibility="hidden",(t=document.querySelector("#payment-element"))==null||t.classList.add("hide"),this.stripe.confirmPayment({elements:this.elements,confirmParams:{return_url:`https://${window.location.host}/dashboard/history`}}).then(r=>{r.error?(console.error(r.error.message),alert(r.error.message)):console.log(r)})}async cancelSubscription(){fetch(`${u}/aion/payments/cancel_subscription`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.checkUserToken()}`}}).then(e=>e.json()).catch(e=>{console.error("Something wrong when create a checkout session",e)})}async getSubscriptionInfo(){try{let e=await fetch(`${u}/aion/payments/subscription`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.checkUserToken()}`}});return await this.handleResponse(e)}catch{return null}}async handleResponse(e){if(!e.ok){let t=await e.json();throw{status:e.status,message:t}}if(e.status!==204)return await e.json()}};var D=new y,i=class{constructor(){let e=a.getToken(),t=`${u}/aion/users`;this.client=new h(t,e)}static getInstance(){return i.instance||(i.instance=new i),i.instance}static async fetchRequests(e=0,t=10){try{let{client:r}=i.getInstance(),o=`data?filters=requests&offset=${e}&limit=${t}`;return await r.get(o).then(n=>n.requests.array)}catch(r){return console.error("getRequests:",r),[]}}static async fetchUsageApi(){try{let{client:e}=i.getInstance(),t="data?filters=all&offset=0&limit=1";return await e.get(t).then(r=>r.api)}catch(e){return console.error("fetchUsageApi:",e),[]}}static async signUp(){try{let{client:e}=i.getInstance();return await e.post("sign_up",{}).then(()=>!1).catch(t=>{if(t.status===400)return!0;throw t})}catch(e){return console.error("signUp:",e),!1}}static async login(){try{let{client:e}=i.getInstance();return await e.get("login")}catch(e){console.error("login:",e)}}static async delete(){try{let{client:e}=i.getInstance();return await e.delete("")}catch(e){console.error("delete:",e)}}static async fetchApiToken(){try{let{client:e}=i.getInstance();return await e.post("api_token",{})}catch(e){console.error("fetchApiToken:",e),console.error("fetchApiToken:",e)}}static async refreshApiToken(){try{let{client:e}=i.getInstance();return await e.patch("api_token",{})}catch(e){console.error("refreshApiToken:",e)}}static async fetchSubscriptionData(){let{client:e}=i.getInstance();try{let t="data?filters=all&offset=0&limit=1";return await e.get(t).then(r=>r)}catch(t){console.error("fetchSubscriptionData:",t)}}static async subscriptionInfo(){var w,v,S,T,k,P,A,x,$,E,L,I,B;let e=document.querySelector("#plan-info"),t=document.querySelector("#usage-info"),r=document.querySelector("#btn-cancel-plan");e.classList.add("hide"),t.classList.add("hide"),r.classList.add("hide");let o=[i.fetchSubscriptionData(),D.getSubscriptionInfo()],[n,s]=await Promise.all(o);console.log(n),console.log(s),n!=null&&n.plan||(e.innerHTML=`You're on the <span class="text-color-green">Free</span> plan. You have limits of 20 & 100 checks per month via web & API, respectively. If you need more, check out our <a class="text-color-green" href='https://${window.location.host}/#plans' >plans</a>.`,t.innerHTML=`You have used ${((w=n==null?void 0:n.requests)==null?void 0:w.total)||0} of 20 checks via web and ${((S=(v=n==null?void 0:n.api)==null?void 0:v.usage)==null?void 0:S.daily)||0} of 100 checks via API.`,e.classList.remove("hide"),t.classList.remove("hide")),(n==null?void 0:n.plan.requests_limits.quantity)===1e3&&(e.innerHTML=`You're on the <span class="text-color-green">Base</span> plan. You have limits of 1000 requests for both web & API.`,t.innerHTML=`You have used ${(((T=n==null?void 0:n.requests)==null?void 0:T.total)||0)+(((P=(k=n==null?void 0:n.api)==null?void 0:k.usage)==null?void 0:P.daily)||0)} of 1000 checks via both web API.`,(A=s==null?void 0:s.subscription.meta)!=null&&A.was_canceled?(r.classList.add("hide"),t.innerHTML=t.innerHTML+` Your subscription has been canceled, expires on ${new Date(s==null?void 0:s.subscription.expiration_dt).toLocaleDateString()}.`):r.classList.remove("hide"),e.classList.remove("hide"),t.classList.remove("hide")),(n==null?void 0:n.plan.requests_limits.quantity)===1e4&&(e.innerHTML=`You're on the <span class="text-color-green">PRO</span> plan. You have limits of 10000 requests for both web & API.`,t.innerHTML=`You have used ${(((x=n==null?void 0:n.requests)==null?void 0:x.total)||0)+(((E=($=n==null?void 0:n.api)==null?void 0:$.usage)==null?void 0:E.daily)||0)} of 10000 checks via both web & API.`,s!=null&&s.subscription.meta.was_canceled?(r.classList.add("hide"),t.innerHTML=t.innerHTML+` Your subscription has been canceled, expires on ${new Date(s==null?void 0:s.subscription.expiration_dt).toLocaleDateString()}.`):r.classList.remove("hide"),e.classList.remove("hide"),t.classList.remove("hide")),(n==null?void 0:n.plan.requests_limits.quantity)>1e4&&(e.innerHTML=`You're on the <span class="text-color-green">Custom</span> plan. You have limits of ${n==null?void 0:n.plan.requests_limits.quantity} requests for both web & API.`,t.innerHTML=`You have used ${(((L=n==null?void 0:n.requests)==null?void 0:L.total)||0)+(((B=(I=n==null?void 0:n.api)==null?void 0:I.usage)==null?void 0:B.daily)||0)} of 10000 checks via both web & API.`,r.innerHTML="Contact US  to update your plan.",r.classList.remove("hide"),e.classList.remove("hide"),t.classList.remove("hide")),r.addEventListener("click",async()=>{(n==null?void 0:n.plan.requests_limits.quantity)>1e4?window.location.href=`https://${window.location.host}/contact-us`:confirm("Are you sure you want to cancel your subscription?")?(alert("Your subscription has been canceled."),D.cancelSubscription().then(O=>{console.log(O)}),window.location.href=`https://${window.location.host}/#plans`):alert("Your subscription has not been canceled.")})}},l=i;l.instance=null;var p=class{constructor(){}static isAuth(){return localStorage.getItem(p.token_key)!==null}static setAuth(){localStorage.setItem(p.key,"true")}static removeAuth(){localStorage.removeItem(p.key)}static async init(){p.isAuth()?(await l.signUp(),p.setAuth(),await l.login()):(await l.signUp(),p.setAuth(),await l.login())}static getToken(){var e;return(e=localStorage.getItem("_ms-mid"))!=null?e:""}static isExpiredToken(){let e=p.getToken();if((e==null?void 0:e.length)>0){let t=j(e),r=Date.now()/1e3;return t.exp<r}return!0}static checkAuth(e){if(!p.isAuth()){let t=document.getElementById("sign-up");return t.style.display="flex",t.style.zIndex=100,e(),!0}return!1}},a=p;a.key="isSignUp",a.token_key="_ms-mid";var d=class{constructor(){let e=a.getToken(),t=`${u}/aion/ai-generated`;this.client=new h(t,e)}static getInstance(){return d.instance||(d.instance=new d),d.instance}static async getReportsByBinary(e){let{client:t}=d.getInstance();try{let r=new FormData;return r.append("binary",e,"uploaded-file.png"),await t.postBinary("reports/binary",r)}catch(r){r.status===402&&alert("Please verify your email to continue using the service"),r.status===429&&(alert(`You have reached the limit of requests per day. Alert: ${JSON.stringify(r.message)}`),window.location.href=`https://${window.location.host}/#plans`),console.error("Error getReportsByBinary:",r)}}static async getReportsByUrl(e){let{client:t}=d.getInstance();try{let r=`reports/url?url=${e}`;return await t.post(r,{})}catch(r){r.status===402&&alert("Please verify your email to continue using the service"),console.error("getReportsByUrl:",r)}}static async getAudioVerdict(e){console.log("getAudioVerdict");let{client:t}=d.getInstance();try{let r=new FormData;return r.append("file",e),await t.postBinary("reports/audio/binary",r)}catch(r){r.status===402&&alert("Please verify your email to continue using the service"),console.error("Error getAudioVerdict:",r)}}static async getYoutubeVerdict(e){let{client:t}=d.getInstance();try{let r={url:e};return await t.post("reports/audio/link",r)}catch(r){r.status===402&&alert("Please verify your email to continue using the service"),console.error("Error getYoutubeVerdict:",r)}}},f=d;f.instance=null;var g=class{constructor(){}static isLimitExceeded(){return!!a.isExpiredToken()}static increment(){let e=localStorage.getItem(g.key),t=e===null?1:Number(e)+1;localStorage.setItem(g.key,t.toString())}},b=g;b.key="requestCount";document.getElementById("delete-account").onclick=async()=>{await a.init(),await l.delete(),window.location.href=`https://${window.location.host}/`};document.getElementById("sign-out").onclick=()=>{a.removeAuth()};l.subscriptionInfo().then(c=>{});})();
