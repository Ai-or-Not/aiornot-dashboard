"use strict";(()=>{function x(c){var e=c.split(".")[1],r=e.replace(/-/g,"+").replace(/_/g,"/"),t=decodeURIComponent(atob(r).split("").map(function(n){return"%"+("00"+n.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(t)}var L="https://js.stripe.com/v3",q=/^https:\/\/js\.stripe\.com\/v3\/?(\?.*)?$/,E="loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used",C=function(){for(var e=document.querySelectorAll('script[src^="'.concat(L,'"]')),r=0;r<e.length;r++){var t=e[r];if(q.test(t.src))return t}return null},D=function(e){var r=e&&!e.advancedFraudSignals?"?advancedFraudSignals=false":"",t=document.createElement("script");t.src="".concat(L).concat(r);var n=document.head||document.body;if(!n)throw new Error("Expected document.body not to be null. Stripe.js requires a <body> element.");return n.appendChild(t),t},O=function(e,r){!e||!e._registerWrapper||e._registerWrapper({name:"stripe-js",version:"2.1.7",startTime:r})},h=null,Y=function(e){return h!==null||(h=new Promise(function(r,t){if(typeof window=="undefined"||typeof document=="undefined"){r(null);return}if(window.Stripe&&e&&console.warn(E),window.Stripe){r(window.Stripe);return}try{var n=C();n&&e?console.warn(E):n||(n=D(e)),n.addEventListener("load",function(){window.Stripe?r(window.Stripe):t(new Error("Stripe.js not available"))}),n.addEventListener("error",function(){t(new Error("Failed to load Stripe.js"))})}catch(o){t(o);return}})),h},F=function(e,r,t){if(e===null)return null;var n=e.apply(void 0,r);return O(n,t),n},B=Promise.resolve().then(function(){return Y(null)}),_=!1;B.catch(function(c){_||console.warn(c)});var j=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];_=!0;var n=Date.now();return B.then(function(o){return F(o,r,n)})};var l="https://api.ai-or-not.com";var m=class{constructor(e,r){this.apiUrl=e,this.bearerToken=r}async get(e){let r=`${this.apiUrl}/${e}`;try{let t=await fetch(r,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`}});return await this.handleResponse(t)}catch(t){throw console.error("Error",t),t}}async post(e,r){let t=`${this.apiUrl}/${e}`;try{let n=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`},body:JSON.stringify(r)});return await this.handleResponse(n)}catch(n){throw console.error("Request error",n),n.status===429&&n.message.msg.type==="requests"&&alert(`It looks like you have reached your plan limit of ${n.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),n}}async postBinary(e,r){let t=`${this.apiUrl}/${e}`;try{let n=await fetch(t,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${this.bearerToken}`},body:r});return await this.handleResponse(n)}catch(n){throw console.error("Binary request error:",n),n.status===429&&n.message.msg.type==="requests"&&alert(`It looks like you have reached your plan limit of ${n.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),n}}async delete(e){let r=`${this.apiUrl}/${e}`;try{let t=await fetch(r,{method:"DELETE",headers:{accept:"*/*",Authorization:`Bearer ${this.bearerToken}`}});await this.handleResponse(t)}catch(t){throw console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 DELETE-\u0437\u0430\u043F\u0440\u043E\u0441\u0430:",t),t}}async patch(e,r){let t=`${this.apiUrl}/${e}`;try{let n=await fetch(t,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bearerToken}`},body:JSON.stringify(r)});return await this.handleResponse(n)}catch(n){throw console.error("\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 PATCH-\u0437\u0430\u043F\u0440\u043E\u0441\u0430:",n),n}}async handleResponse(e){if(!e.ok){let r=await e.json();throw{status:e.status,message:r}}if(e.status!==204)return await e.json()}};var y=class{constructor(){this.elements=null;this.stripe=null;this.home_element=document.querySelector("#home");this.PRODUCT_ID_BASE_PLAN={id:"price_1O2Ba4Ba9yG4sk8k4y3ZnEVT",msg:"Base plan: $30/month",test_id:"price_1O1wSsBa9yG4sk8kej8shNYs"};this.PRODUCT_ID_PRO_PLAN={id:"price_1O2Ku4Ba9yG4sk8kIQBdzpPj",msg:"Pro plan: $250/month",test_id:"price_1O1wTVBa9yG4sk8kQSPeT9rp"};this.is_test_mode=!1}createPaymentForm(e){this.home_element.innerHTML=`



        <div style="background: white; position: fixed; top: 0; left: 0; right: 0; bottom: 0; display: flex; flex-direction: column; justify-content: center; align-items: center">
            <div style="width: 100%; display: flex; justify-content: center; align-items: center">
                <h2 style="color: black; font-size: 2.5rem; justify-content: center">AI or Not</h2>
                <br>
                <br>
                <br>
            </div>
           <div class="payment-container">
           <div class="sr-root" style="display: flex; flex-direction: row; align-items: center; justify-content: center; min-width: 380px">
            <div class="sr-main">
                <h2 style="color: black; font-size: 2.5rem; justify-content: center">${e}</h2>
                <br>
                <form id="payment-form" style="min-width: 380px">
                    <div id="payment-element"></div>
                    <br>
                    // Add callback function
                </form>
                
                    <button class="button" style="width: 100%; visibility: hidden" id="submit">
                        <span style="width: 100 %;" id="button-text">Pay</span>
                    </button>
                    
                
            </div>
        </div>
        </div>
            <div id="progress-loader" class="loader" style="border: 16px solid #f3f3f3; border-top: 16px solid #adff00; border-bottom: 16px solid #adff00; border-radius: 50%;width: 120px;height: 120px;animation: spin 2s linear infinite;"></div>
        </div>
    `,document.querySelector("#submit").addEventListener("click",()=>{this.completePayment()})}async createPaymentIntent(e){fetch(`${l}/aion/payments/config`).then(r=>r.json()).then(r=>{j(r.stripe_public_key).then(t=>{this.stripe=t,this.is_test_mode=r.stripe_public_key.includes("test"),fetch(`${l}/aion/payments/create_intent`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.checkUserToken()}`},body:JSON.stringify({product_id:this.is_test_mode?e.test_id:e.id})}).then(n=>n.json()).then(n=>{var i;if(n.code===10)throw console.warn(n.message),alert(n.message),window.location.href=`https://${window.location.host}/`,new Error(n.message);this.elements=this.stripe.elements({clientSecret:n.client_secret});let o=this.elements.create("payment");(i=document.querySelector("#progress-loader"))==null||i.classList.add("hide"),document.querySelector("#submit").style.visibility="visible",o.mount("#payment-element")}).catch(n=>{console.error("Something wrong when create a payment intent",n),alert("Something wrong when create a payment. Please try again.")})})})}checkUserToken(){let e=localStorage.getItem("_ms-mid");if(!e)throw new Error("User token not found");return e}completePayment(){var e,r;(e=document.querySelector("#progress-loader"))==null||e.classList.remove("hide"),document.querySelector("#submit").style.visibility="hidden",(r=document.querySelector("#payment-element"))==null||r.classList.add("hide"),this.stripe.confirmPayment({elements:this.elements,confirmParams:{return_url:`https://${window.location.host}/dashboard/settings`}}).then(t=>{t.error?(console.error(t.error.message),alert(t.error.message),window.location.href=`https://${window.location.host}/#plans`):console.log(t)})}async cancelSubscription(){fetch(`${l}/aion/payments/cancel_subscription`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.checkUserToken()}`}}).then(e=>e.json()).catch(e=>{console.error("Something wrong when create a checkout session",e)})}async getSubscriptionInfo(){try{let e=await fetch(`${l}/aion/payments/subscription`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.checkUserToken()}`}});return await this.handleResponse(e)}catch{return null}}async handleResponse(e){if(!e.ok){let r=await e.json();throw{status:e.status,message:r}}if(e.status!==204)return await e.json()}};var R=new y,a=class{constructor(){let e=s.getToken(),r=`${l}/aion/users`;this.client=new m(r,e)}static getInstance(){return a.instance||(a.instance=new a),a.instance}static async fetchRequests(e=0,r=10){try{let{client:t}=a.getInstance(),n=`data?filters=requests&offset=${e}&limit=${r}`;return await t.get(n).then(o=>o.requests.array)}catch(t){return console.error("getRequests:",t),[]}}static async fetchUsageApi(){try{let{client:e}=a.getInstance(),r="data?filters=all&offset=0&limit=1";return await e.get(r).then(t=>t.api)}catch(e){return console.error("fetchUsageApi:",e),[]}}static async signUp(){try{let{client:e}=a.getInstance();return await e.post("sign_up",{}).then(()=>!1).catch(r=>{throw r})}catch(e){throw console.error("signUp:",e),e}}static async login(){try{let{client:e}=a.getInstance();return await e.get("login")}catch(e){console.error("login:",e)}}static async delete(){try{let{client:e}=a.getInstance();return await e.delete("")}catch(e){console.error("delete:",e)}}static async fetchApiToken(){try{let{client:e}=a.getInstance();return await e.post("api_token",{})}catch(e){console.error("fetchApiToken:",e),console.error("fetchApiToken:",e)}}static async refreshApiToken(){try{let{client:e}=a.getInstance();return await e.patch("api_token",{})}catch(e){console.error("refreshApiToken:",e)}}static async fetchSubscriptionData(){let{client:e}=a.getInstance();try{let r="data?filters=all&offset=0&limit=1";return await e.get(r).then(t=>t)}catch(r){console.error("fetchSubscriptionData:",r)}}static async subscriptionInfo(){var b,v,S,k,T,P,A,$,I;let e=document.querySelector("#plan-info"),r=document.querySelector("#usage-info"),t=document.querySelector("#btn-cancel-plan");e.classList.add("hide"),r.classList.add("hide"),t.classList.add("hide");let n=[a.fetchSubscriptionData(),R.getSubscriptionInfo()],[o,i]=await Promise.all(n);o!=null&&o.plan||(e.innerHTML=`You're on the <span class="text-color-green">Free</span> plan. You have limits of 20 & 100 checks per month via web & API, respectively. If you need more, check out our <a class="text-color-green" href='https://${window.location.host}/#plans' >plans</a>.`,r.innerHTML=`You have used ${(((b=o==null?void 0:o.requests)==null?void 0:b.total)||0)-(((S=(v=o==null?void 0:o.api)==null?void 0:v.usage)==null?void 0:S.daily)||0)} of 20 checks via web and ${((T=(k=o==null?void 0:o.api)==null?void 0:k.usage)==null?void 0:T.daily)||0} of 100 checks via API.`,e.classList.remove("hide"),r.classList.remove("hide")),(o==null?void 0:o.plan.requests_limits.quantity)===1e3&&(e.innerHTML=`You're on the <span class="text-color-green">Base</span> plan. You have limits of 1000 requests for both web & API.`,r.innerHTML=`You have used ${((P=o==null?void 0:o.requests)==null?void 0:P.total)||0} of 1000 checks via both web API.`,(A=i==null?void 0:i.subscription.meta)!=null&&A.was_canceled?(t.classList.add("hide"),r.innerHTML=r.innerHTML+` Your subscription has been canceled, expires on ${new Date(i==null?void 0:i.subscription.expiration_dt).toLocaleDateString()}.`):t.classList.remove("hide"),e.classList.remove("hide"),r.classList.remove("hide")),(o==null?void 0:o.plan.requests_limits.quantity)===1e4&&(e.innerHTML=`You're on the <span class="text-color-green">PRO</span> plan. You have limits of 10000 requests for both web & API.`,r.innerHTML=`You have used ${(($=o==null?void 0:o.requests)==null?void 0:$.total)||0} of 10000 checks via both web & API.`,i!=null&&i.subscription.meta.was_canceled?(t.classList.add("hide"),r.innerHTML=r.innerHTML+` Your subscription has been canceled, expires on ${new Date(i==null?void 0:i.subscription.expiration_dt).toLocaleDateString()}.`):t.classList.remove("hide"),e.classList.remove("hide"),r.classList.remove("hide")),(o==null?void 0:o.plan.requests_limits.quantity)>1e4&&(e.innerHTML=`You're on the <span class="text-color-green">Custom</span> plan. You have limits of ${o==null?void 0:o.plan.requests_limits.quantity} requests for both web & API.`,r.innerHTML=`You have used ${((I=o==null?void 0:o.requests)==null?void 0:I.total)||0} of 10000 checks via both web & API.`,t.innerHTML="Contact US  to update your plan.",t.classList.remove("hide"),e.classList.remove("hide"),r.classList.remove("hide")),t.addEventListener("click",async()=>{(o==null?void 0:o.plan.requests_limits.quantity)>1e4?window.location.href=`https://${window.location.host}/contact-us`:confirm("Are you sure you want to cancel your subscription?")?(alert("Your subscription has been canceled."),R.cancelSubscription().then(U=>{console.log(U)}),window.location.href=`https://${window.location.host}/#plans`):alert("Your subscription has not been canceled.")})}},u=a;u.instance=null;var d=class{constructor(){}static isAuth(){return localStorage.getItem(d.token_key)!==null}static setAuth(){localStorage.setItem(d.key,"true")}static removeAuth(){localStorage.removeItem(d.key)}static async init(){if(localStorage.getItem("_aion_in")===null)try{await u.signUp(),d.setAuth(),await u.login(),localStorage.setItem("_aion_in","true")}catch(e){console.log(e)}}static getToken(){var e;return(e=localStorage.getItem("_ms-mid"))!=null?e:""}static isExpiredToken(){let e=d.getToken();if((e==null?void 0:e.length)>0){let r=x(e),t=Date.now()/1e3;return r.exp<t}return!0}static checkAuth(e){if(!d.isAuth()){let r=document.getElementById("sign-up");return r.style.display="flex",r.style.zIndex=100,e(),!0}return!1}},s=d;s.key="isSignUp",s.token_key="_ms-mid";var p=class{constructor(){let e=s.getToken(),r=`${l}/aion/ai-generated`;this.client=new m(r,e)}static getInstance(){return p.instance||(p.instance=new p),p.instance}static async getReportsByBinary(e){let{client:r}=p.getInstance();try{let t=new FormData;return t.append("binary",e,"uploaded-file.png"),await r.postBinary("reports/binary",t)}catch(t){t.status===402&&alert("Please verify your email to continue using the service"),t.status===429&&(alert(`It looks like you have reached your plan limit of ${t.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),window.location.href=`https://${window.location.host}/#plans`),console.error("Error getReportsByBinary:",t)}}static async getReportsByUrl(e){let{client:r}=p.getInstance();try{let t=`reports/url?url=${e}`;return await r.post(t,{})}catch(t){t.status===402&&alert("Please verify your email to continue using the service"),t.status===429&&(alert(`It looks like you have reached your plan limit of ${t.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),window.location.href=`https://${window.location.host}/#plans`),console.error("getReportsByUrl:",t)}}static async getAudioVerdict(e){let{client:r}=p.getInstance();try{let t=new FormData;return t.append("file",e),await r.postBinary("reports/audio/binary",t)}catch(t){t.status===402&&alert("Please verify your email to continue using the service"),t.status===429&&(alert(`It looks like you have reached your plan limit of ${t.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),window.location.href=`https://${window.location.host}/#plans`),console.error("Error getAudioVerdict:",t)}}static async getYoutubeVerdict(e){let{client:r}=p.getInstance();try{let t={url:e};return await r.post("reports/audio/link",t)}catch(t){t.status===402&&alert("Please verify your email to continue using the service"),t.status===429&&(alert(`It looks like you have reached your plan limit of ${t.message.msg.current_limit} requests. To continue, please upgrade to a new plan.`),window.location.href=`https://${window.location.host}/#plans`),console.error("Error getYoutubeVerdict:",t)}}},f=p;f.instance=null;var g=class{constructor(){}static isLimitExceeded(){return!!s.isExpiredToken()}static increment(){let e=localStorage.getItem(g.key),r=e===null?1:Number(e)+1;localStorage.setItem(g.key,r.toString())}},w=g;w.key="requestCount";document.getElementById("delete-account").onclick=async()=>{await s.init(),await u.delete(),localStorage.removeItem("_aion_in"),window.location.href=`https://${window.location.host}/`};document.getElementById("sign-out").onclick=()=>{s.removeAuth(),localStorage.removeItem("_aion_in")};s.init();u.subscriptionInfo().then(c=>{});})();
